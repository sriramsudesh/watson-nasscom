(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.PersonalityTraitNames = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/ar');

},{"../../locales/v2/ar":28}],2:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/de');

},{"../../locales/v2/de":29}],3:[function(require,module,exports){
/**
 * Copyright 2016 IBM Corp. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

module.exports = {
  'en': require('./en'),
  'es': require('./es'),
  'ja': require('./ja'),
  'ar': require('./ar'),
  'it': require('./it'),
  'de': require('./de'),
  'ko': require('./ko'),
  'zh': require('./zh'),
  'zh-tw': require('./zh-tw'),
  'fr': require('./fr'),
  'pt-br': require('./pt-br')

};

},{"./ar":1,"./de":2,"./en":4,"./es":5,"./fr":6,"./it":8,"./ja":9,"./ko":10,"./pt-br":11,"./zh":13,"./zh-tw":12}],4:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/en');

},{"../../locales/v2/en":30}],5:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/es');

},{"../../locales/v2/es":31}],6:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/fr');

},{"../../locales/v2/fr":32}],7:[function(require,module,exports){
/**
 * Copyright 2016 IBM Corp. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _ = require('underscore'),
    contains = _.contains,
    extend = _.extend,
    keys = _.keys;

var dictionaries = require('./dictionaries');

var I18nData = function () {
  function I18nData(locale) {
    _classCallCheck(this, I18nData);

    this._locale = contains(keys(dictionaries), locale) ? locale : 'en';
    this._dictionary = dictionaries[this._locale];
  }

  _createClass(I18nData, [{
    key: 'data',
    value: function data() {
      return extend({}, this._dictionary);
    }
  }]);

  return I18nData;
}();

module.exports = I18nData;

},{"./dictionaries":3,"underscore":50}],8:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/it');

},{"../../locales/v2/it":33}],9:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/ja');

},{"../../locales/v2/ja":34}],10:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/ko');

},{"../../locales/v2/ko":35}],11:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/pt-br');

},{"../../locales/v2/pt-br":36}],12:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/zh-tw');

},{"../../locales/v2/zh-tw":37}],13:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v2/zh');

},{"../../locales/v2/zh":38}],14:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/ar');

},{"../../locales/v3/ar":39}],15:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/de');

},{"../../locales/v3/de":40}],16:[function(require,module,exports){
/**
 * Copyright 2016 IBM Corp. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

module.exports = {
  'en': require('./en'),
  'es': require('./es'),
  'ja': require('./ja'),
  'ar': require('./ar'),
  'it': require('./it'),
  'de': require('./de'),
  'ko': require('./ko'),
  'zh': require('./zh'),
  'zh-tw': require('./zh-tw'),
  'fr': require('./fr'),
  'pt-br': require('./pt-br')
};

},{"./ar":14,"./de":15,"./en":17,"./es":18,"./fr":19,"./it":21,"./ja":22,"./ko":23,"./pt-br":24,"./zh":26,"./zh-tw":25}],17:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/en');

},{"../../locales/v3/en":41}],18:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/es');

},{"../../locales/v3/es":42}],19:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/fr');

},{"../../locales/v3/fr":43}],20:[function(require,module,exports){
/**
 * Copyright 2016 IBM Corp. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _ = require('underscore');
var contains = _.contains;
var extend = _.extend;
var keys = _.keys;

var dictionaries = require('./dictionaries');

var I18nData = function () {
  function I18nData(locale) {
    _classCallCheck(this, I18nData);

    this._locale = contains(keys(dictionaries), locale) ? locale : 'en';
    this._dictionary = dictionaries[this._locale];
  }

  _createClass(I18nData, [{
    key: 'data',
    value: function data() {
      return extend({}, this._dictionary);
    }
  }]);

  return I18nData;
}();

module.exports = I18nData;

},{"./dictionaries":16,"underscore":50}],21:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/it');

},{"../../locales/v3/it":44}],22:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/ja');

},{"../../locales/v3/ja":45}],23:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/ko');

},{"../../locales/v3/ko":46}],24:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/pt-br');

},{"../../locales/v3/pt-br":47}],25:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/zh-tw');

},{"../../locales/v3/zh-tw":48}],26:[function(require,module,exports){
'use strict';
/*
 * Copyright 2015-2016 IBM Corp. All Rights Reserved.
#
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
#
 *      http://www.apache.org/licenses/LICENSE-2.0
#
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use static';

module.exports = require('../../locales/v3/zh');

},{"../../locales/v3/zh":49}],27:[function(require,module,exports){
/**
 * Copyright 2016 IBM Corp. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var _ = require('underscore');
var extend = _.extend;
var pick = _.pick;
var pairs = _.pairs;

var I18nDataV2 = require('./i18n/v2');
var I18nDataV3 = require('./i18n/v3');
var defaultVersion = 'v2';

var PersonalityTraitNames = function () {
  function PersonalityTraitNames(options) {
    _classCallCheck(this, PersonalityTraitNames);

    //parameters - locale and version
    this._options = extend(this.defaultOptions(), pick(options, ['locale', 'version']));
    this._version = typeof this._options.version !== 'undefined' ? this._options.version : defaultVersion;

    if (this._version === 'v3') {
      this._i18n = new I18nDataV3(this._options.locale);
    } else {
      this._i18n = new I18nDataV2(this._options.locale);
    }
    this._data = this._i18n.data();
  }

  _createClass(PersonalityTraitNames, [{
    key: 'defaultOptions',
    value: function defaultOptions() {
      return { locale: 'en' };
    }
  }, {
    key: 'name',
    value: function name(traitId) {
      return this._data[traitId];
    }
  }, {
    key: 'names',
    value: function names() {
      return pairs(this._data).map(function (p) {
        return p[1];
      });
    }
  }]);

  return PersonalityTraitNames;
}();

module.exports = PersonalityTraitNames;

},{"./i18n/v2":7,"./i18n/v3":20,"underscore":50}],28:[function(require,module,exports){
module.exports={
  "Agreeableness" : "الوئام",
  "Conscientiousness" : "الاجتهاد",
  "Extraversion" : "الانبساط",
  "Neuroticism" : "مدى العاطفية",
  "Openness" : "الانفتاح",
  "Achievement striving" : "السعي للانجاز",
  "Activity level" : "مستوى النشاط",
  "Adventurousness" : "المغامرة",
  "Altruism" : "الايثار",
  "Anger" : "متقد",
  "Anxiety" : "عرضة للقلق",
  "Artistic interests" : "الهوايات  الفنية",
  "Assertiveness" : "الاصرار",
  "Cautiousness" : "الحذر",
  "Cheerfulness" : "البهجة",
  "Cooperation" : "التعاون",
  "Depression" : "كئيب",
  "Dutifulness" : "الطاعة",
  "Emotionality" : "الانفعال",
  "Excitement-seeking" : "البحث عن الاثارة",
  "Friendliness" : "غير متحفظ",
  "Gregariousness" : "الألفة",
  "Imagination" : "الخيال",
  "Immoderation" : "الغلو",
  "Intellect" : "الذكاء",
  "Liberalism" : "تحدي-السلطة",
  "Modesty" : "التواضع",
  "Morality" : "العند",
  "Orderliness" : "النظام",
  "Self-consciousness" : "الوعي الذاتي",
  "Self-discipline" : "الانضباط الذاتي",
  "Self-efficacy" : "كفاءة الذات",
  "Sympathy" : "التعاطف",
  "Trust" : "الثقة",
  "Vulnerability" : "عرضة للتوتر",
  "Challenge" : "التحدي",
  "Closeness" : "التقارب",
  "Curiosity" : "الفضول",
  "Excitement" : "الاثارة",
  "Harmony" : "الانسجام",
  "Ideal" : "المثالية",
  "Liberty" : "الحرية",
  "Love" : "الحب",
  "Practicality" : "العملية",
  "Self-expression" : "التعبير عن الذات",
  "Stability" : "الثبات",
  "Structure" : "الانتظام",
  "Conservation" : "المحافظة",
  "Hedonism" : "التلذذ",
  "Openness to change" : "الانفتاح  على  التغيير",
  "Self-enhancement" : "تعزيز الذات",
  "Self-transcendence" : "تنزيه الذات"
}
},{}],29:[function(require,module,exports){
module.exports={
  "Agreeableness" : "Angenehme Wesenszüge",
  "Conscientiousness" : "Pflichtbewusstsein",
  "Extraversion" : "Extraversion",
  "Neuroticism" : "Emotionaler Bereich",
  "Openness" : "Offen",
  "Achievement striving" : "Nach Zielen strebend",
  "Activity level" : "Aktivitätsstufe",
  "Adventurousness" : "Abenteuerlustig",
  "Altruism" : "Altruistisch",
  "Anger" : "Hitzig",
  "Anxiety" : "macht sich leicht Sorgen",
  "Artistic interests" : "Künstlerische Interessen",
  "Assertiveness" : "Durchsetzungsvermögen",
  "Cautiousness" : "Vorsichtig",
  "Cheerfulness" : "Fröhlich",
  "Cooperation" : "Kooperativ",
  "Depression" : "Melancholisch",
  "Dutifulness" : "Pflichtbewusst",
  "Emotionality" : "Emotionalität",
  "Excitement-seeking" : "Nach Aufregungen suchend",
  "Friendliness" : "Gerne ausgehend",
  "Gregariousness" : "Gesellig",
  "Imagination" : "Phantasie",
  "Immoderation" : "Maßlos",
  "Intellect" : "Intellekt",
  "Liberalism" : "Aufmüpfig",
  "Modesty" : "Bescheiden",
  "Morality" : "Kompromisslos",
  "Orderliness" : "Ordnungsliebend",
  "Self-consciousness" : "Selbstbewusst",
  "Self-discipline" : "Selbstdiszipliniert",
  "Self-efficacy" : "Selbsteffizient",
  "Sympathy" : "Sympathisch",
  "Trust" : "Vertrauenswürdig",
  "Vulnerability" : "Anfällig für Stress",
  "Challenge" : "Herausforderung",
  "Closeness" : "Verschwiegenheit",
  "Curiosity" : "Neugier",
  "Excitement" : "Aufregung",
  "Harmony" : "Harmonie",
  "Ideal" : "Ideal",
  "Liberty" : "Freiheit",
  "Love" : "Liebe",
  "Practicality" : "Zweckmäßigkeit",
  "Self-expression" : "Selbstdarstellung",
  "Stability" : "Stabilität",
  "Structure" : "Struktur",
  "Conservation" : "Konservierung",
  "Hedonism" : "Hedonismus",
  "Openness to change" : "Offen für Veränderungen",
  "Self-enhancement" : "Selbstverbesserung",
  "Self-transcendence" : "Selbsttranszendenz"
}
},{}],30:[function(require,module,exports){
module.exports={
  "Agreeableness" : "Agreeableness",
  "Altruism" : "Altruism",
  "Cooperation" : "Cooperation",
  "Modesty" : "Modesty",
  "Morality" : "Uncompromising",
  "Sympathy" : "Sympathy",
  "Trust" : "Trust",
  "Conscientiousness" : "Conscientiousness",
  "Achievement striving" : "Achievement striving",
  "Cautiousness" : "Cautiousness",
  "Dutifulness" : "Dutifulness",
  "Orderliness" : "Orderliness",
  "Self-discipline" : "Self-discipline",
  "Self-efficacy" : "Self-efficacy",
  "Extraversion" : "Extraversion",
  "Activity level" : "Activity level",
  "Assertiveness" : "Assertiveness",
  "Cheerfulness" : "Cheerfulness",
  "Excitement-seeking" : "Excitement-seeking",
  "Friendliness" : "Outgoing",
  "Gregariousness" : "Gregariousness",
  "Neuroticism" : "Emotional range",
  "Anger" : "Fiery",
  "Anxiety" : "Prone to worry",
  "Depression" : "Melancholy",
  "Immoderation" : "Immoderation",
  "Self-consciousness" : "Self-consciousness",
  "Vulnerability" : "Susceptible to stress",
  "Openness" : "Openness",
  "Adventurousness" : "Adventurousness",
  "Artistic interests" : "Artistic interests",
  "Emotionality" : "Emotionality",
  "Imagination" : "Imagination",
  "Intellect" : "Intellect",
  "Liberalism" : "Authority-challenging",
  "Liberty" : "Liberty",
  "Ideal" : "Ideal",
  "Love" : "Love",
  "Practicality" : "Practicality",
  "Self-expression" : "Self-expression",
  "Stability" : "Stability",
  "Structure" : "Structure",
  "Challenge" : "Challenge",
  "Closeness" : "Closeness",
  "Curiosity" : "Curiosity",
  "Excitement" : "Excitement",
  "Harmony" : "Harmony",
  "Conservation" : "Conservation",
  "Hedonism" : "Hedonism",
  "Openness to change" : "Openness to change",
  "Self-enhancement" : "Self-enhancement",
  "Self-transcendence" : "Self-transcendence"
}
},{}],31:[function(require,module,exports){
module.exports={
  "Agreeableness" : "Amabilidad",
  "Conscientiousness" : "Responsabilidad",
  "Extraversion" : "Extroversión",
  "Neuroticism" : "Rango emocional",
  "Openness" : "Apertura a experiencias",
  "Achievement striving" : "Necesidad de éxito",
  "Activity level" : "Nivel de actividad",
  "Adventurousness" : "Audacia",
  "Altruism" : "Altruismo",
  "Anger" : "Vehemencia",
  "Anxiety" : "Tendencia a la preocupación",
  "Artistic interests" : "Intereses artísticos",
  "Assertiveness" : "Seguridad en uno mismo",
  "Cautiousness" : "Cautela",
  "Cheerfulness" : "Alegría",
  "Cooperation" : "Cooperación",
  "Depression" : "Melancolía",
  "Dutifulness" : "Obediencia",
  "Emotionality" : "Emocionalidad",
  "Excitement-seeking" : "Búsqueda de emociones",
  "Friendliness" : "Simpatía",
  "Gregariousness" : "Sociabilidad",
  "Imagination" : "Imaginación",
  "Immoderation" : "Desmesura",
  "Intellect" : "Intelecto",
  "Liberalism" : "Desafío a la autoridad",
  "Modesty" : "Modestia",
  "Morality" : "Intransigencia",
  "Orderliness" : "Disciplina",
  "Self-consciousness" : "Timidez",
  "Self-discipline" : "Autodisciplina",
  "Self-efficacy" : "Autoeficacia",
  "Sympathy" : "Compasión",
  "Trust" : "Confianza",
  "Vulnerability" : "Susceptibilidad a la tensión",
  "Challenge" : "Desafío",
  "Closeness" : "Familiaridad",
  "Curiosity" : "Curiosidad",
  "Excitement" : "Entusiasmo",
  "Harmony" : "Armonía",
  "Ideal" : "Ideal",
  "Liberty" : "Libertad",
  "Love" : "Amor",
  "Practicality" : "Practicidad",
  "Self-expression" : "Autoexpresión",
  "Stability" : "Estabilidad",
  "Structure" : "Estructura",
  "Conservation" : "Conservación",
  "Hedonism" : "Hedonismo",
  "Openness to change" : "Apertura al cambio",
  "Self-enhancement" : "Superación personal",
  "Self-transcendence" : "Autotranscendencia"
}
},{}],32:[function(require,module,exports){
module.exports={
  "Agreeableness" : "Amabilité",
  "Conscientiousness" : "Tempérament consciencieux",
  "Extraversion" : "Extraversion",
  "Neuroticism" : "Portée émotionnelle",
  "Openness" : "Ouverture",
  "Achievement striving" : "Persévérance",
  "Activity level" : "Niveau d'activité",
  "Adventurousness" : "Intrépidité",
  "Altruism" : "Altruisme",
  "Anger" : "Passion",
  "Anxiety" : "Prompt à s'inquiéter",
  "Artistic interests" : "Intérêt pour l'art",
  "Assertiveness" : "Assertivité",
  "Cautiousness" : "Circonspection",
  "Cheerfulness" : "Gaieté",
  "Cooperation" : "Coopération",
  "Depression" : "Mélancolie",
  "Dutifulness" : "Sens du devoir",
  "Emotionality" : "Emotionnalité",
  "Excitement-seeking" : "Recherche de sensations",
  "Friendliness" : "Extraversion",
  "Gregariousness" : "Convivialité",
  "Imagination" : "Imagination",
  "Immoderation" : "Immodération",
  "Intellect" : "Intellect",
  "Liberalism" : "Rebelle",
  "Modesty" : "Modestie",
  "Morality" : "Intransigeance",
  "Orderliness" : "Ordre",
  "Self-consciousness" : "Susceptibilité",
  "Self-discipline" : "Autodiscipline",
  "Self-efficacy" : "Efficacité personnelle",
  "Sympathy" : "Empathie",
  "Trust" : "Confiance",
  "Vulnerability" : "Sujet au stress",
  "Challenge" : "Combativité",
  "Closeness" : "Comportement clanique",
  "Curiosity" : "Curiosité",
  "Excitement" : "Enthousiasme",
  "Harmony" : "Harmonie",
  "Ideal" : "Idéal",
  "Liberty" : "Liberté",
  "Love" : "Amour",
  "Practicality" : "Pragmatisme",
  "Self-expression" : "Extériorisation",
  "Stability" : "Stabilité",
  "Structure" : "Structure",
  "Conservation" : "Conservatisme",
  "Hedonism" : "Hédonisme",
  "Openness to change" : "Ouverture au changement",
  "Self-enhancement" : "Ambition personnelle",
  "Self-transcendence" : "Dépassement de soi"
}
},{}],33:[function(require,module,exports){
module.exports={
  "Agreeableness" : "Disponibilità",
  "Conscientiousness" : "Scrupolosità",
  "Extraversion" : "Estroversione",
  "Neuroticism" : "Gamma emotiva",
  "Openness" : "Apertura",
  "Achievement striving" : "Propensione al raggiungimento dello scopo",
  "Activity level" : "Livello di attività",
  "Adventurousness" : "Spirito d'avventura",
  "Altruism" : "Altruismo",
  "Anger" : "Irascibile",
  "Anxiety" : "Incline alla preoccupazione",
  "Artistic interests" : "Interessi artistici",
  "Assertiveness" : "Assertività",
  "Cautiousness" : "Prudenza",
  "Cheerfulness" : "Positività",
  "Cooperation" : "Cooperazione",
  "Depression" : "Malinconico",
  "Dutifulness" : "Responsabilità",
  "Emotionality" : "Emotività",
  "Excitement-seeking" : "Desiderio di stimoli",
  "Friendliness" : "Cordialità",
  "Gregariousness" : "Socialità",
  "Imagination" : "Immaginazione",
  "Immoderation" : "Smodato",
  "Intellect" : "Curiosità intellettuale",
  "Liberalism" : "Anticonvenzionale",
  "Modesty" : "Modestia",
  "Morality" : "Irremovibilità",
  "Orderliness" : "Accuratezza",
  "Self-consciousness" : "Autocosciente",
  "Self-discipline" : "Autodisciplina",
  "Self-efficacy" : "Sicurezza di sé",
  "Sympathy" : "Compartecipazione",
  "Trust" : "Fiducia",
  "Vulnerability" : "Suscettibile allo stress",
  "Challenge" : "Stimolo",
  "Closeness" : "Vicinanza",
  "Curiosity" : "Curiosità",
  "Excitement" : "Eccitazione",
  "Harmony" : "Armonia",
  "Ideal" : "Ideale",
  "Liberty" : "Libertà",
  "Love" : "Amore",
  "Practicality" : "Pragmatismo",
  "Self-expression" : "Espressione della personalità",
  "Stability" : "Stabilità",
  "Structure" : "Struttura",
  "Conservation" : "Tradizionalismo",
  "Hedonism" : "Edonismo",
  "Openness to change" : "Apertura al cambiamento",
  "Self-enhancement" : "Successo personale",
  "Self-transcendence" : "Impegno sociale"
}
},{}],34:[function(require,module,exports){
module.exports={
  "Agreeableness" : "協調性",
  "Conscientiousness" : "誠実性",
  "Extraversion" : "外向性",
  "Neuroticism" : "情緒不安定性",
  "Openness" : "知的好奇心",
  "Achievement striving" : "達成努力",
  "Activity level" : "活発度",
  "Adventurousness" : "大胆性",
  "Altruism" : "利他主義",
  "Anger" : "激情的",
  "Anxiety" : "心配性",
  "Artistic interests" : "芸術的関心度",
  "Assertiveness" : "自己主張",
  "Cautiousness" : "注意深さ",
  "Cheerfulness" : "明朗性",
  "Cooperation" : "協力",
  "Depression" : "悲観的",
  "Dutifulness" : "忠実さ",
  "Emotionality" : "情動性",
  "Excitement-seeking" : "刺激希求性",
  "Friendliness" : "友好性",
  "Gregariousness" : "社交性",
  "Imagination" : "想像力",
  "Immoderation" : "利己的",
  "Intellect" : "思考力",
  "Liberalism" : "現状打破",
  "Modesty" : "謙虚さ",
  "Morality" : "強硬さ",
  "Orderliness" : "秩序性",
  "Self-consciousness" : "自意識過剰",
  "Self-discipline" : "自制力",
  "Self-efficacy" : "自己効力感",
  "Sympathy" : "共感度",
  "Trust" : "信用度",
  "Vulnerability" : "低ストレス耐性",
  "Challenge" : "挑戦",
  "Closeness" : "親密",
  "Curiosity" : "好奇心",
  "Excitement" : "興奮",
  "Harmony" : "調和",
  "Ideal" : "理想",
  "Liberty" : "自由主義",
  "Love" : "社会性",
  "Practicality" : "実用主義",
  "Self-expression" : "自己表現",
  "Stability" : "安定性",
  "Structure" : "仕組",
  "Conservation" : "現状維持",
  "Hedonism" : "快楽主義",
  "Openness to change" : "変化許容性",
  "Self-enhancement" : "自己増進",
  "Self-transcendence" : "自己超越"
}
},{}],35:[function(require,module,exports){
module.exports={
  "Agreeableness": "친화성",
  "Conscientiousness": "성실성",
  "Extraversion": "외향성",
  "Neuroticism": "감정의 기복",
  "Openness": "개방성",
  "Achievement striving": "성취 추구",
  "Activity level": "활동 레벨",
  "Adventurousness": "모험성",
  "Altruism": "이타성",
  "Anger": "급한",
  "Anxiety": "걱정이 많은",
  "Artistic interests": "예술적 흥미",
  "Assertiveness": "자신만만함",
  "Cautiousness": "신중함",
  "Cheerfulness": "쾌활",
  "Cooperation": "협동성",
  "Depression": "우울한",
  "Dutifulness": "순종성",
  "Emotionality": "정서성",
  "Excitement-seeking": "자극 탐색",
  "Friendliness": "외향적",
  "Gregariousness": "사교적",
  "Imagination": "상상력",
  "Immoderation": "극단적인",
  "Intellect": "지력",
  "Liberalism": "권력에 저항",
  "Modesty": "겸손함",
  "Morality": "비타협성",
  "Orderliness": "질서 정연함",
  "Self-consciousness": "자의식이 강한",
  "Self-discipline": "자기 훈련",
  "Self-efficacy": "자기 효능감",
  "Sympathy": "동정",
  "Trust": "신뢰",
  "Vulnerability": "스트레스에 민감한",
  "Challenge": "도전",
  "Closeness": "친밀감",
  "Curiosity": "호기심",
  "Excitement": "흥미",
  "Harmony": "조화",
  "Ideal": "이상",
  "Liberty": "자유",
  "Love": "사랑",
  "Practicality": "실용성",
  "Self-expression": "자기 표현",
  "Stability": "안정",
  "Structure": "구조",
  "Conservation": "보수성",
  "Hedonism": "쾌락주의",
  "Openness to change": "변화에 대한 개방성",
  "Self-enhancement": "자기고양",
  "Self-transcendence": "자기초월"
}
},{}],36:[function(require,module,exports){
module.exports={
  "Agreeableness" : "Amabilidade",
  "Conscientiousness" : "Escrupulosidade",
  "Extraversion" : "Extroversão",
  "Neuroticism" : "Faixa emocional",
  "Openness" : "Abertura",
  "Achievement striving" : "Esforço para realização",
  "Activity level" : "Nível de atividade",
  "Adventurousness" : "Desejo de aventura",
  "Altruism" : "Altruísmo",
  "Anger" : "Furioso",
  "Anxiety" : "Propenso a se preocupar",
  "Artistic interests" : "Interesses artísticos",
  "Assertiveness" : "Assertividade",
  "Cautiousness" : "Cautela",
  "Cheerfulness" : "Bom Humor",
  "Cooperation" : "Cooperação",
  "Depression" : "Melancolia",
  "Dutifulness" : "Respeito",
  "Emotionality" : "Emotividade",
  "Excitement-seeking" : "Busca de Empolgação",
  "Friendliness" : "Extrovertido",
  "Gregariousness" : "Gregarismo",
  "Imagination" : "Imaginação",
  "Immoderation" : "Imoderação",
  "Intellect" : "Intelecto",
  "Liberalism" : "Desafio à autoridade",
  "Modesty" : "Modéstia",
  "Morality" : "Determinação",
  "Orderliness" : "Regularidade",
  "Self-consciousness" : "Autoconsciência",
  "Self-discipline" : "Autodisciplina",
  "Self-efficacy" : "Autoeficiência",
  "Sympathy" : "Simpatia",
  "Trust" : "Confiança",
  "Vulnerability" : "Suscetível ao stress",
  "Challenge" : "Desafio",
  "Closeness" : "Retraimento",
  "Curiosity" : "Curiosidade",
  "Excitement" : "Empolgação",
  "Harmony" : "Harmonia",
  "Ideal" : "Ideal",
  "Liberty" : "Liberdade",
  "Love" : "Amor",
  "Practicality" : "Natureza prática",
  "Self-expression" : "Expressão da própria personalidade",
  "Stability" : "Estabilidade",
  "Structure" : "Estrutura",
  "Conservation" : "Conservação",
  "Hedonism" : "Hedonismo",
  "Openness to change" : "Abertura à mudança",
  "Self-enhancement" : "Autocrescimento",
  "Self-transcendence" : "Autotranscendência"
}
},{}],37:[function(require,module,exports){
module.exports={
  "Agreeableness" : "親和性",
  "Conscientiousness" : "盡責性",
  "Extraversion" : "外向性",
  "Neuroticism" : "情緒範圍",
  "Openness" : "開放性",
  "Achievement striving" : "成就驅力",
  "Activity level" : "活動水準",
  "Adventurousness" : "冒險",
  "Altruism" : "利他",
  "Anger" : "暴躁",
  "Anxiety" : "容易煩惱",
  "Artistic interests" : "審美",
  "Assertiveness" : "獨斷",
  "Cautiousness" : "謹慎",
  "Cheerfulness" : "快樂",
  "Cooperation" : "合作",
  "Depression" : "憂鬱",
  "Dutifulness" : "守分",
  "Emotionality" : "情緒豐富",
  "Excitement-seeking" : "追求刺激",
  "Friendliness" : "外向",
  "Gregariousness" : "合群",
  "Imagination" : "想像",
  "Immoderation" : "不知節制",
  "Intellect" : "智能",
  "Liberalism" : "挑戰權威",
  "Modesty" : "謙遜",
  "Morality" : "不妥協",
  "Orderliness" : "規律",
  "Self-consciousness" : "自我意識",
  "Self-discipline" : "自律",
  "Self-efficacy" : "自我效能",
  "Sympathy" : "同情心",
  "Trust" : "信任",
  "Vulnerability" : "抗壓性低",
  "Challenge" : "挑戰",
  "Closeness" : "封閉",
  "Curiosity" : "好奇心",
  "Excitement" : "興奮",
  "Harmony" : "和諧",
  "Ideal" : "理想",
  "Liberty" : "自由",
  "Love" : "愛",
  "Practicality" : "務實",
  "Self-expression" : "自我表達",
  "Stability" : "穩定性",
  "Structure" : "結構",
  "Conservation" : "保守",
  "Hedonism" : "享樂主義",
  "Openness to change" : "接受改變的開放態度",
  "Self-enhancement" : "自我提升",
  "Self-transcendence" : "自我超越"
}
},{}],38:[function(require,module,exports){
module.exports={
  "Agreeableness" : "宜人性",
  "Conscientiousness" : "尽责性",
  "Extraversion" : "外向性",
  "Neuroticism" : "情感范围",
  "Openness" : "开放性",
  "Achievement striving" : "追求成就",
  "Activity level" : "活力程度",
  "Adventurousness" : "冒险",
  "Altruism" : "利他",
  "Anger" : "暴躁",
  "Anxiety" : "易焦虑",
  "Artistic interests" : "审美",
  "Assertiveness" : "独断性",
  "Cautiousness" : "审慎",
  "Cheerfulness" : "热情",
  "Cooperation" : "合作",
  "Depression" : "忧郁",
  "Dutifulness" : "责任感",
  "Emotionality" : "情感丰富",
  "Excitement-seeking" : "寻求刺激",
  "Friendliness" : "开朗",
  "Gregariousness" : "合群性",
  "Imagination" : "想象力",
  "Immoderation" : "无节制",
  "Intellect" : "智力",
  "Liberalism" : "挑战权威",
  "Modesty" : "谦逊",
  "Morality" : "坚定",
  "Orderliness" : "条理性",
  "Self-consciousness" : "自我意识",
  "Self-discipline" : "自律",
  "Self-efficacy" : "自我效能",
  "Sympathy" : "同情心",
  "Trust" : "信任",
  "Vulnerability" : "易受压力",
  "Challenge" : "挑战",
  "Closeness" : "亲密",
  "Curiosity" : "好奇心",
  "Excitement" : "刺激",
  "Harmony" : "和谐",
  "Ideal" : "理想",
  "Liberty" : "自由",
  "Love" : "爱",
  "Practicality" : "实用",
  "Self-expression" : "自我表现",
  "Stability" : "稳定性",
  "Structure" : "结构",
  "Conservation" : "保守",
  "Hedonism" : "享乐主义",
  "Openness to change" : "对改变持开放态度",
  "Self-enhancement" : "自我提高",
  "Self-transcendence" : "自我超越"
}
},{}],39:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "الوئام",
  "big5_conscientiousness": "الاجتهاد",
  "big5_extraversion": "الانبساط",
  "big5_neuroticism": "مدى العاطفية",
  "big5_openness": "الانفتاح",
  "facet_achievement_striving": "السعي للانجاز",
  "facet_activity_level": "مستوى النشاط",
  "facet_adventurousness": "المغامرة",
  "facet_altruism": "الايثار",
  "facet_anger": "متقد",
  "facet_anxiety": "عرضة للقلق",
  "facet_artistic_interests": "الهوايات  الفنية",
  "facet_assertiveness": "الاصرار",
  "facet_cautiousness": "الحذر",
  "facet_cheerfulness": "البهجة",
  "facet_cooperation": "التعاون",
  "facet_depression": "كئيب",
  "facet_dutifulness": "الطاعة",
  "facet_emotionality": "الانفعال",
  "facet_excitement_seeking": "البحث عن الاثارة",
  "facet_friendliness": "غير متحفظ",
  "facet_gregariousness": "الألفة",
  "facet_imagination": "الخيال",
  "facet_immoderation": "الغلو",
  "facet_intellect": "الذكاء",
  "facet_liberalism": "تحدي-السلطة",
  "facet_modesty": "التواضع",
  "facet_morality": "العند",
  "facet_orderliness": "النظام",
  "facet_self_consciousness": "الوعي الذاتي",
  "facet_self_discipline": "الانضباط الذاتي",
  "facet_self_efficacy": "كفاءة الذات",
  "facet_sympathy": "التعاطف",
  "facet_trust": "الثقة",
  "facet_vulnerability": "عرضة للتوتر",
  "need_challenge": "التحدي",
  "need_closeness": "التقارب",
  "need_curiosity": "الفضول",
  "need_excitement": "الاثارة",
  "need_harmony": "الانسجام",
  "need_ideal": "المثالية",
  "need_liberty": "الحرية",
  "need_love": "الحب",
  "need_practicality": "العملية",
  "need_self_expression": "التعبير عن الذات",
  "need_stability": "الثبات",
  "need_structure": "الانتظام",
  "value_conservation": "المحافظة",
  "value_hedonism": "التلذذ",
  "value_openness_to_change": "الانفتاح  على  التغيير",
  "value_self_enhancement": "تعزيز الذات",
  "value_self_transcendence": "تنزيه الذات"
}

},{}],40:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "Angenehme Wesenszüge",
  "big5_conscientiousness": "Pflichtbewusstsein",
  "big5_extraversion": "Extraversion",
  "big5_neuroticism": "Emotionaler Bereich",
  "big5_openness": "Offen",
  "facet_achievement_striving": "Nach Zielen strebend",
  "facet_activity_level": "Aktivitätsstufe",
  "facet_adventurousness": "Abenteuerlustig",
  "facet_altruism": "Altruistisch",
  "facet_anger": "Hitzig",
  "facet_anxiety": "macht sich leicht Sorgen",
  "facet_artistic_interests": "Künstlerische Interessen",
  "facet_assertiveness": "Durchsetzungsvermögen",
  "facet_cautiousness": "Vorsichtig",
  "facet_cheerfulness": "Fröhlich",
  "facet_cooperation": "Kooperativ",
  "facet_depression": "Melancholisch",
  "facet_dutifulness": "Pflichtbewusst",
  "facet_emotionality": "Emotionalität",
  "facet_excitement_seeking": "Nach Aufregungen suchend",
  "facet_friendliness": "Gerne ausgehend",
  "facet_gregariousness": "Gesellig",
  "facet_imagination": "Phantasie",
  "facet_immoderation": "Maßlos",
  "facet_intellect": "Intellekt",
  "facet_liberalism": "Aufmüpfig",
  "facet_modesty": "Bescheiden",
  "facet_morality": "Kompromisslos",
  "facet_orderliness": "Ordnungsliebend",
  "facet_self_consciousness": "Selbstbewusst",
  "facet_self_discipline": "Selbstdiszipliniert",
  "facet_self_efficacy": "Selbsteffizient",
  "facet_sympathy": "Sympathisch",
  "facet_trust": "Vertrauenswürdig",
  "facet_vulnerability": "Anfällig für Stress",
  "need_challenge": "Herausforderung",
  "need_closeness": "Verschwiegenheit",
  "need_curiosity": "Neugier",
  "need_excitement": "Aufregung",
  "need_harmony": "Harmonie",
  "need_ideal": "Ideal",
  "need_liberty": "Freiheit",
  "need_love": "Liebe",
  "need_practicality": "Zweckmäßigkeit",
  "need_self_expression": "Selbstdarstellung",
  "need_stability": "Stabilität",
  "need_structure": "Struktur",
  "value_conservation": "Konservierung",
  "value_hedonism": "Hedonismus",
  "value_openness_to_change": "Offen für Veränderungen",
  "value_self_enhancement": "Selbstverbesserung",
  "value_self_transcendence": "Selbsttranszendenz"
}

},{}],41:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "Agreeableness",
  "facet_altruism": "Altruism",
  "facet_cooperation": "Cooperation",
  "facet_modesty": "Modesty",
  "facet_morality": "Uncompromising",
  "facet_sympathy": "Sympathy",
  "facet_trust": "Trust",
  "big5_conscientiousness": "Conscientiousness",
  "facet_achievement_striving": "Achievement striving",
  "facet_cautiousness": "Cautiousness",
  "facet_dutifulness": "Dutifulness",
  "facet_orderliness": "Orderliness",
  "facet_self_discipline": "Self-discipline",
  "facet_self_efficacy": "Self-efficacy",
  "big5_extraversion": "Extraversion",
  "facet_activity_level": "Activity level",
  "facet_assertiveness": "Assertiveness",
  "facet_cheerfulness": "Cheerfulness",
  "facet_excitement_seeking": "Excitement-seeking",
  "facet_friendliness": "Outgoing",
  "facet_gregariousness": "Gregariousness",
  "big5_neuroticism": "Emotional range",
  "facet_anger": "Fiery",
  "facet_anxiety": "Prone to worry",
  "facet_depression": "Melancholy",
  "facet_immoderation": "Immoderation",
  "facet_self_consciousness": "Self-consciousness",
  "facet_vulnerability": "Susceptible to stress",
  "big5_openness": "Openness",
  "facet_adventurousness": "Adventurousness",
  "facet_artistic_interests": "Artistic interests",
  "facet_emotionality": "Emotionality",
  "facet_imagination": "Imagination",
  "facet_intellect": "Intellect",
  "facet_liberalism": "Authority-challenging",
  "need_liberty": "Liberty",
  "need_ideal": "Ideal",
  "need_love": "Love",
  "need_practicality": "Practicality",
  "need_self_expression": "Self-expression",
  "need_stability": "Stability",
  "need_structure": "Structure",
  "need_challenge": "Challenge",
  "need_closeness": "Closeness",
  "need_curiosity": "Curiosity",
  "need_excitement": "Excitement",
  "need_harmony": "Harmony",
  "value_conservation": "Conservation",
  "value_hedonism": "Hedonism",
  "value_openness_to_change": "Openness to change",
  "value_self_enhancement": "Self-enhancement",
  "value_self_transcendence": "Self-transcendence"
}

},{}],42:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "Amabilidad",
  "big5_conscientiousness": "Responsabilidad",
  "big5_extraversion": "Extroversión",
  "big5_neuroticism": "Rango emocional",
  "big5_openness": "Apertura a experiencias",
  "facet_achievement_striving": "Necesidad de éxito",
  "facet_activity_level": "Nivel de actividad",
  "facet_adventurousness": "Audacia",
  "facet_altruism": "Altruismo",
  "facet_anger": "Vehemencia",
  "facet_anxiety": "Tendencia a la preocupación",
  "facet_artistic_interests": "Intereses artísticos",
  "facet_assertiveness": "Seguridad en uno mismo",
  "facet_cautiousness": "Cautela",
  "facet_cheerfulness": "Alegría",
  "facet_cooperation": "Cooperación",
  "facet_depression": "Melancolía",
  "facet_dutifulness": "Obediencia",
  "facet_emotionality": "Emocionalidad",
  "facet_excitement_seeking": "Búsqueda de emociones",
  "facet_friendliness": "Simpatía",
  "facet_gregariousness": "Sociabilidad",
  "facet_imagination": "Imaginación",
  "facet_immoderation": "Desmesura",
  "facet_intellect": "Intelecto",
  "facet_liberalism": "Desafío a la autoridad",
  "facet_modesty": "Modestia",
  "facet_morality": "Intransigencia",
  "facet_orderliness": "Disciplina",
  "facet_self_consciousness": "Timidez",
  "facet_self_discipline": "Autodisciplina",
  "facet_self_efficacy": "Autoeficacia",
  "facet_sympathy": "Compasión",
  "facet_trust": "Confianza",
  "facet_vulnerability": "Susceptibilidad a la tensión",
  "need_challenge": "Desafío",
  "need_closeness": "Familiaridad",
  "need_curiosity": "Curiosidad",
  "need_excitement": "Entusiasmo",
  "need_harmony": "Armonía",
  "need_ideal": "Ideal",
  "need_liberty": "Libertad",
  "need_love": "Amor",
  "need_practicality": "Practicidad",
  "need_self_expression": "Autoexpresión",
  "need_stability": "Estabilidad",
  "need_structure": "Estructura",
  "value_conservation": "Conservación",
  "value_hedonism": "Hedonismo",
  "value_openness_to_change": "Apertura al cambio",
  "value_self_enhancement": "Superación personal",
  "value_self_transcendence": "Autotranscendencia"
}

},{}],43:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "Amabilité",
  "big5_conscientiousness": "Tempérament consciencieux",
  "big5_extraversion": "Extraversion",
  "big5_neuroticism": "Portée émotionnelle",
  "big5_openness": "Ouverture",
  "facet_achievement_striving": "Persévérance",
  "facet_activity_level": "Niveau d'activité",
  "facet_adventurousness": "Intrépidité",
  "facet_altruism": "Altruisme",
  "facet_anger": "Passion",
  "facet_anxiety": "Prompt à s'inquiéter",
  "facet_artistic_interests": "Intérêt pour l'art",
  "facet_assertiveness": "Assertivité",
  "facet_cautiousness": "Circonspection",
  "facet_cheerfulness": "Gaieté",
  "facet_cooperation": "Coopération",
  "facet_depression": "Mélancolie",
  "facet_dutifulness": "Sens du devoir",
  "facet_emotionality": "Emotionnalité",
  "facet_excitement_seeking": "Recherche de sensations",
  "facet_friendliness": "Extraversion",
  "facet_gregariousness": "Convivialité",
  "facet_imagination": "Imagination",
  "facet_immoderation": "Immodération",
  "facet_intellect": "Intellect",
  "facet_liberalism": "Rebelle",
  "facet_modesty": "Modestie",
  "facet_morality": "Intransigeance",
  "facet_orderliness": "Ordre",
  "facet_self_consciousness": "Susceptibilité",
  "facet_self_discipline": "Autodiscipline",
  "facet_self_efficacy": "Efficacité personnelle",
  "facet_sympathy": "Empathie",
  "facet_trust": "Confiance",
  "facet_vulnerability": "Sujet au stress",
  "need_challenge": "Combativité",
  "need_closeness": "Comportement clanique",
  "need_curiosity": "Curiosité",
  "need_excitement": "Enthousiasme",
  "need_harmony": "Harmonie",
  "need_ideal": "Idéal",
  "need_liberty": "Liberté",
  "need_love": "Amour",
  "need_practicality": "Pragmatisme",
  "need_self_expression": "Extériorisation",
  "need_stability": "Stabilité",
  "need_structure": "Structure",
  "value_conservation": "Conservatisme",
  "value_hedonism": "Hédonisme",
  "value_openness_to_change": "Ouverture au changement",
  "value_self_enhancement": "Ambition personnelle",
  "value_self_transcendence": "Dépassement de soi"
}

},{}],44:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "Disponibilità",
  "big5_conscientiousness": "Scrupolosità",
  "big5_extraversion": "Estroversione",
  "big5_neuroticism": "Gamma emotiva",
  "big5_openness": "Apertura",
  "facet_achievement_striving": "Propensione al raggiungimento dello scopo",
  "facet_activity_level": "Livello di attività",
  "facet_adventurousness": "Spirito d'avventura",
  "facet_altruism": "Altruismo",
  "facet_anger": "Irascibile",
  "facet_anxiety": "Incline alla preoccupazione",
  "facet_artistic_interests": "Interessi artistici",
  "facet_assertiveness": "Assertività",
  "facet_cautiousness": "Prudenza",
  "facet_cheerfulness": "Positività",
  "facet_cooperation": "Cooperazione",
  "facet_depression": "Malinconico",
  "facet_dutifulness": "Responsabilità",
  "facet_emotionality": "Emotività",
  "facet_excitement_seeking": "Desiderio di stimoli",
  "facet_friendliness": "Cordialità",
  "facet_gregariousness": "Socialità",
  "facet_imagination": "Immaginazione",
  "facet_immoderation": "Smodato",
  "facet_intellect": "Curiosità intellettuale",
  "facet_liberalism": "Anticonvenzionale",
  "facet_modesty": "Modestia",
  "facet_morality": "Irremovibilità",
  "facet_orderliness": "Accuratezza",
  "facet_self_consciousness": "Autocosciente",
  "facet_self_discipline": "Autodisciplina",
  "facet_self_efficacy": "Sicurezza di sé",
  "facet_sympathy": "Compartecipazione",
  "facet_trust": "Fiducia",
  "facet_vulnerability": "Suscettibile allo stress",
  "need_challenge": "Stimolo",
  "need_closeness": "Vicinanza",
  "need_curiosity": "Curiosità",
  "need_excitement": "Eccitazione",
  "need_harmony": "Armonia",
  "need_ideal": "Ideale",
  "need_liberty": "Libertà",
  "need_love": "Amore",
  "need_practicality": "Pragmatismo",
  "need_self_expression": "Espressione della personalità",
  "need_stability": "Stabilità",
  "need_structure": "Struttura",
  "value_conservation": "Tradizionalismo",
  "value_hedonism": "Edonismo",
  "value_openness_to_change": "Apertura al cambiamento",
  "value_self_enhancement": "Successo personale",
  "value_self_transcendence": "Impegno sociale"
}

},{}],45:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "協調性",
  "big5_conscientiousness": "誠実性",
  "big5_extraversion": "外向性",
  "big5_neuroticism": "情緒不安定性",
  "big5_openness": "知的好奇心",
  "facet_achievement_striving": "達成努力",
  "facet_activity_level": "活発度",
  "facet_adventurousness": "大胆性",
  "facet_altruism": "利他主義",
  "facet_anger": "激情的",
  "facet_anxiety": "心配性",
  "facet_artistic_interests": "芸術的関心度",
  "facet_assertiveness": "自己主張",
  "facet_cautiousness": "注意深さ",
  "facet_cheerfulness": "明朗性",
  "facet_cooperation": "協力",
  "facet_depression": "悲観的",
  "facet_dutifulness": "忠実さ",
  "facet_emotionality": "情動性",
  "facet_excitement_seeking": "刺激希求性",
  "facet_friendliness": "友好性",
  "facet_gregariousness": "社交性",
  "facet_imagination": "想像力",
  "facet_immoderation": "利己的",
  "facet_intellect": "思考力",
  "facet_liberalism": "現状打破",
  "facet_modesty": "謙虚さ",
  "facet_morality": "強硬さ",
  "facet_orderliness": "秩序性",
  "facet_self_consciousness": "自意識過剰",
  "facet_self_discipline": "自制力",
  "facet_self_efficacy": "自己効力感",
  "facet_sympathy": "共感度",
  "facet_trust": "信用度",
  "facet_vulnerability": "低ストレス耐性",
  "need_challenge": "挑戦",
  "need_closeness": "親密",
  "need_curiosity": "好奇心",
  "need_excitement": "興奮",
  "need_harmony": "調和",
  "need_ideal": "理想",
  "need_liberty": "自由主義",
  "need_love": "社会性",
  "need_practicality": "実用主義",
  "need_self_expression": "自己表現",
  "need_stability": "安定性",
  "need_structure": "仕組",
  "value_conservation": "現状維持",
  "value_hedonism": "快楽主義",
  "value_openness_to_change": "変化許容性",
  "value_self_enhancement": "自己増進",
  "value_self_transcendence": "自己超越"
}

},{}],46:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "친화성",
  "big5_conscientiousness": "성실성",
  "big5_extraversion": "외향성",
  "big5_neuroticism": "감정의 기복",
  "big5_openness": "개방성",
  "facet_achievement_striving": "성취 추구",
  "facet_activity_level": "활동 레벨",
  "facet_adventurousness": "모험성",
  "facet_altruism": "이타성",
  "facet_anger": "급한",
  "facet_anxiety": "걱정이 많은",
  "facet_artistic_interests": "예술적 흥미",
  "facet_assertiveness": "자신만만함",
  "facet_cautiousness": "신중함",
  "facet_cheerfulness": "쾌활",
  "facet_cooperation": "협동성",
  "facet_depression": "우울한",
  "facet_dutifulness": "순종성",
  "facet_emotionality": "정서성",
  "facet_excitement_seeking": "자극 탐색",
  "facet_friendliness": "외향적",
  "facet_gregariousness": "사교적",
  "facet_imagination": "상상력",
  "facet_immoderation": "극단적인",
  "facet_intellect": "지력",
  "facet_liberalism": "권력에 저항",
  "facet_modesty": "겸손함",
  "facet_morality": "비타협성",
  "facet_orderliness": "질서 정연함",
  "facet_self_consciousness": "자의식이 강한",
  "facet_self_discipline": "자기 훈련",
  "facet_self_efficacy": "자기 효능감",
  "facet_sympathy": "동정",
  "facet_trust": "신뢰",
  "facet_vulnerability": "스트레스에 민감한",
  "need_challenge": "도전",
  "need_closeness": "친밀감",
  "need_curiosity": "호기심",
  "need_excitement": "흥미",
  "need_harmony": "조화",
  "need_ideal": "이상",
  "need_liberty": "자유",
  "need_love": "사랑",
  "need_practicality": "실용성",
  "need_self_expression": "자기 표현",
  "need_stability": "안정",
  "need_structure": "구조",
  "value_conservation": "보수성",
  "value_hedonism": "쾌락주의",
  "value_openness_to_change": "변화에 대한 개방성",
  "value_self_enhancement": "자기고양",
  "value_self_transcendence": "자기초월"
}

},{}],47:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "Amabilidade",
  "big5_conscientiousness": "Escrupulosidade",
  "big5_extraversion": "Extroversão",
  "big5_neuroticism": "Faixa emocional",
  "big5_openness": "Abertura",
  "facet_achievement_striving": "Esforço para realização",
  "facet_activity_level": "Nível de atividade",
  "facet_adventurousness": "Desejo de aventura",
  "facet_altruism": "Altruísmo",
  "facet_anger": "Furioso",
  "facet_anxiety": "Propenso a se preocupar",
  "facet_artistic_interests": "Interesses artísticos",
  "facet_assertiveness": "Assertividade",
  "facet_cautiousness": "Cautela",
  "facet_cheerfulness": "Bom Humor",
  "facet_cooperation": "Cooperação",
  "facet_depression": "Melancolia",
  "facet_dutifulness": "Respeito",
  "facet_emotionality": "Emotividade",
  "facet_excitement_seeking": "Busca de Empolgação",
  "facet_friendliness": "Extrovertido",
  "facet_gregariousness": "Gregarismo",
  "facet_imagination": "Imaginação",
  "facet_immoderation": "Imoderação",
  "facet_intellect": "Intelecto",
  "facet_liberalism": "Desafio à autoridade",
  "facet_modesty": "Modéstia",
  "facet_morality": "Determinação",
  "facet_orderliness": "Regularidade",
  "facet_self_consciousness": "Autoconsciência",
  "facet_self_discipline": "Autodisciplina",
  "facet_self_efficacy": "Autoeficiência",
  "facet_sympathy": "Simpatia",
  "facet_trust": "Confiança",
  "facet_vulnerability": "Suscetível ao stress",
  "need_challenge": "Desafio",
  "need_closeness": "Retraimento",
  "need_curiosity": "Curiosidade",
  "need_excitement": "Empolgação",
  "need_harmony": "Harmonia",
  "need_ideal": "Ideal",
  "need_liberty": "Liberdade",
  "need_love": "Amor",
  "need_practicality": "Natureza prática",
  "need_self_expression": "Expressão da própria personalidade",
  "need_stability": "Estabilidade",
  "need_structure": "Estrutura",
  "value_conservation": "Conservação",
  "value_hedonism": "Hedonismo",
  "value_openness_to_change": "Abertura à mudança",
  "value_self_enhancement": "Autocrescimento",
  "value_self_transcendence": "Autotranscendência"
}

},{}],48:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "親和性",
  "big5_conscientiousness": "盡責性",
  "big5_extraversion": "外向性",
  "big5_neuroticism": "情緒範圍",
  "big5_openness": "開放性",
  "facet_achievement_striving": "成就驅力",
  "facet_activity_level": "活動水準",
  "facet_adventurousness": "冒險",
  "facet_altruism": "利他",
  "facet_anger": "暴躁",
  "facet_anxiety": "容易煩惱",
  "facet_artistic_interests": "審美",
  "facet_assertiveness": "獨斷",
  "facet_cautiousness": "謹慎",
  "facet_cheerfulness": "快樂",
  "facet_cooperation": "合作",
  "facet_depression": "憂鬱",
  "facet_dutifulness": "守分",
  "facet_emotionality": "情緒豐富",
  "facet_excitement_seeking": "追求刺激",
  "facet_friendliness": "外向",
  "facet_gregariousness": "合群",
  "facet_imagination": "想像",
  "facet_immoderation": "不知節制",
  "facet_intellect": "智能",
  "facet_liberalism": "挑戰權威",
  "facet_modesty": "謙遜",
  "facet_morality": "不妥協",
  "facet_orderliness": "規律",
  "facet_self_consciousness": "自我意識",
  "facet_self_discipline": "自律",
  "facet_self_efficacy": "自我效能",
  "facet_sympathy": "同情心",
  "facet_trust": "信任",
  "facet_vulnerability": "抗壓性低",
  "need_challenge": "挑戰",
  "need_closeness": "封閉",
  "need_curiosity": "好奇心",
  "need_excitement": "興奮",
  "need_harmony": "和諧",
  "need_ideal": "理想",
  "need_liberty": "自由",
  "need_love": "愛",
  "need_practicality": "務實",
  "need_self_expression": "自我表達",
  "need_stability": "穩定性",
  "need_structure": "結構",
  "value_conservation": "保守",
  "value_hedonism": "享樂主義",
  "value_openness_to_change": "接受改變的開放態度",
  "value_self_enhancement": "自我提升",
  "value_self_transcendence": "自我超越"
}

},{}],49:[function(require,module,exports){
module.exports={
  "big5_agreeableness": "宜人性",
  "big5_conscientiousness": "尽责性",
  "big5_extraversion": "外向性",
  "big5_neuroticism": "情感范围",
  "big5_openness": "开放性",
  "facet_achievement_striving": "追求成就",
  "facet_activity_level": "活力程度",
  "facet_adventurousness": "冒险",
  "facet_altruism": "利他",
  "facet_anger": "暴躁",
  "facet_anxiety": "易焦虑",
  "facet_artistic_interests": "审美",
  "facet_assertiveness": "独断性",
  "facet_cautiousness": "审慎",
  "facet_cheerfulness": "热情",
  "facet_cooperation": "合作",
  "facet_depression": "忧郁",
  "facet_dutifulness": "责任感",
  "facet_emotionality": "情感丰富",
  "facet_excitement_seeking": "寻求刺激",
  "facet_friendliness": "开朗",
  "facet_gregariousness": "合群性",
  "facet_imagination": "想象力",
  "facet_immoderation": "无节制",
  "facet_intellect": "智力",
  "facet_liberalism": "挑战权威",
  "facet_modesty": "谦逊",
  "facet_morality": "坚定",
  "facet_orderliness": "条理性",
  "facet_self_consciousness": "自我意识",
  "facet_self_discipline": "自律",
  "facet_self_efficacy": "自我效能",
  "facet_sympathy": "同情心",
  "facet_trust": "信任",
  "facet_vulnerability": "易受压力",
  "need_challenge": "挑战",
  "need_closeness": "亲密",
  "need_curiosity": "好奇心",
  "need_excitement": "刺激",
  "need_harmony": "和谐",
  "need_ideal": "理想",
  "need_liberty": "自由",
  "need_love": "爱",
  "need_practicality": "实用",
  "need_self_expression": "自我表现",
  "need_stability": "稳定性",
  "need_structure": "结构",
  "value_conservation": "保守",
  "value_hedonism": "享乐主义",
  "value_openness_to_change": "对改变持开放态度",
  "value_self_enhancement": "自我提高",
  "value_self_transcendence": "自我超越"
}

},{}],50:[function(require,module,exports){
//     Underscore.js 1.8.3
//     http://underscorejs.org
//     (c) 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `exports` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var
    push             = ArrayProto.push,
    slice            = ArrayProto.slice,
    toString         = ObjProto.toString,
    hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind,
    nativeCreate       = Object.create;

  // Naked function reference for surrogate-prototype-swapping.
  var Ctor = function(){};

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.8.3';

  // Internal function that returns an efficient (for current engines) version
  // of the passed-in callback, to be repeatedly applied in other Underscore
  // functions.
  var optimizeCb = function(func, context, argCount) {
    if (context === void 0) return func;
    switch (argCount == null ? 3 : argCount) {
      case 1: return function(value) {
        return func.call(context, value);
      };
      case 2: return function(value, other) {
        return func.call(context, value, other);
      };
      case 3: return function(value, index, collection) {
        return func.call(context, value, index, collection);
      };
      case 4: return function(accumulator, value, index, collection) {
        return func.call(context, accumulator, value, index, collection);
      };
    }
    return function() {
      return func.apply(context, arguments);
    };
  };

  // A mostly-internal function to generate callbacks that can be applied
  // to each element in a collection, returning the desired result — either
  // identity, an arbitrary callback, a property matcher, or a property accessor.
  var cb = function(value, context, argCount) {
    if (value == null) return _.identity;
    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
    if (_.isObject(value)) return _.matcher(value);
    return _.property(value);
  };
  _.iteratee = function(value, context) {
    return cb(value, context, Infinity);
  };

  // An internal function for creating assigner functions.
  var createAssigner = function(keysFunc, undefinedOnly) {
    return function(obj) {
      var length = arguments.length;
      if (length < 2 || obj == null) return obj;
      for (var index = 1; index < length; index++) {
        var source = arguments[index],
            keys = keysFunc(source),
            l = keys.length;
        for (var i = 0; i < l; i++) {
          var key = keys[i];
          if (!undefinedOnly || obj[key] === void 0) obj[key] = source[key];
        }
      }
      return obj;
    };
  };

  // An internal function for creating a new object that inherits from another.
  var baseCreate = function(prototype) {
    if (!_.isObject(prototype)) return {};
    if (nativeCreate) return nativeCreate(prototype);
    Ctor.prototype = prototype;
    var result = new Ctor;
    Ctor.prototype = null;
    return result;
  };

  var property = function(key) {
    return function(obj) {
      return obj == null ? void 0 : obj[key];
    };
  };

  // Helper for collection methods to determine whether a collection
  // should be iterated as an array or as an object
  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength
  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094
  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;
  var getLength = property('length');
  var isArrayLike = function(collection) {
    var length = getLength(collection);
    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;
  };

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles raw objects in addition to array-likes. Treats all
  // sparse array-likes as if they were dense.
  _.each = _.forEach = function(obj, iteratee, context) {
    iteratee = optimizeCb(iteratee, context);
    var i, length;
    if (isArrayLike(obj)) {
      for (i = 0, length = obj.length; i < length; i++) {
        iteratee(obj[i], i, obj);
      }
    } else {
      var keys = _.keys(obj);
      for (i = 0, length = keys.length; i < length; i++) {
        iteratee(obj[keys[i]], keys[i], obj);
      }
    }
    return obj;
  };

  // Return the results of applying the iteratee to each element.
  _.map = _.collect = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length,
        results = Array(length);
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      results[index] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };

  // Create a reducing function iterating left or right.
  function createReduce(dir) {
    // Optimized iterator function as using arguments.length
    // in the main function will deoptimize the, see #1991.
    function iterator(obj, iteratee, memo, keys, index, length) {
      for (; index >= 0 && index < length; index += dir) {
        var currentKey = keys ? keys[index] : index;
        memo = iteratee(memo, obj[currentKey], currentKey, obj);
      }
      return memo;
    }

    return function(obj, iteratee, memo, context) {
      iteratee = optimizeCb(iteratee, context, 4);
      var keys = !isArrayLike(obj) && _.keys(obj),
          length = (keys || obj).length,
          index = dir > 0 ? 0 : length - 1;
      // Determine the initial value if none is provided.
      if (arguments.length < 3) {
        memo = obj[keys ? keys[index] : index];
        index += dir;
      }
      return iterator(obj, iteratee, memo, keys, index, length);
    };
  }

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`.
  _.reduce = _.foldl = _.inject = createReduce(1);

  // The right-associative version of reduce, also known as `foldr`.
  _.reduceRight = _.foldr = createReduce(-1);

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, predicate, context) {
    var key;
    if (isArrayLike(obj)) {
      key = _.findIndex(obj, predicate, context);
    } else {
      key = _.findKey(obj, predicate, context);
    }
    if (key !== void 0 && key !== -1) return obj[key];
  };

  // Return all the elements that pass a truth test.
  // Aliased as `select`.
  _.filter = _.select = function(obj, predicate, context) {
    var results = [];
    predicate = cb(predicate, context);
    _.each(obj, function(value, index, list) {
      if (predicate(value, index, list)) results.push(value);
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, predicate, context) {
    return _.filter(obj, _.negate(cb(predicate)), context);
  };

  // Determine whether all of the elements match a truth test.
  // Aliased as `all`.
  _.every = _.all = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (!predicate(obj[currentKey], currentKey, obj)) return false;
    }
    return true;
  };

  // Determine if at least one element in the object matches a truth test.
  // Aliased as `any`.
  _.some = _.any = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = !isArrayLike(obj) && _.keys(obj),
        length = (keys || obj).length;
    for (var index = 0; index < length; index++) {
      var currentKey = keys ? keys[index] : index;
      if (predicate(obj[currentKey], currentKey, obj)) return true;
    }
    return false;
  };

  // Determine if the array or object contains a given item (using `===`).
  // Aliased as `includes` and `include`.
  _.contains = _.includes = _.include = function(obj, item, fromIndex, guard) {
    if (!isArrayLike(obj)) obj = _.values(obj);
    if (typeof fromIndex != 'number' || guard) fromIndex = 0;
    return _.indexOf(obj, item, fromIndex) >= 0;
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      var func = isFunc ? method : value[method];
      return func == null ? func : func.apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, _.property(key));
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs) {
    return _.filter(obj, _.matcher(attrs));
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.find(obj, _.matcher(attrs));
  };

  // Return the maximum element (or element-based computation).
  _.max = function(obj, iteratee, context) {
    var result = -Infinity, lastComputed = -Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value > result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iteratee, context) {
    var result = Infinity, lastComputed = Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = isArrayLike(obj) ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value < result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed < lastComputed || computed === Infinity && result === Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Shuffle a collection, using the modern version of the
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).
  _.shuffle = function(obj) {
    var set = isArrayLike(obj) ? obj : _.values(obj);
    var length = set.length;
    var shuffled = Array(length);
    for (var index = 0, rand; index < length; index++) {
      rand = _.random(0, index);
      if (rand !== index) shuffled[index] = shuffled[rand];
      shuffled[rand] = set[index];
    }
    return shuffled;
  };

  // Sample **n** random values from a collection.
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function(obj, n, guard) {
    if (n == null || guard) {
      if (!isArrayLike(obj)) obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }
    return _.shuffle(obj).slice(0, Math.max(0, n));
  };

  // Sort the object's values by a criterion produced by an iteratee.
  _.sortBy = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value: value,
        index: index,
        criteria: iteratee(value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index - right.index;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(behavior) {
    return function(obj, iteratee, context) {
      var result = {};
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index) {
        var key = iteratee(value, index, obj);
        behavior(result, value, key);
      });
      return result;
    };
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key].push(value); else result[key] = [value];
  });

  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function(result, value, key) {
    result[key] = value;
  });

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key]++; else result[key] = 1;
  });

  // Safely create a real, live array from anything iterable.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (isArrayLike(obj)) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return isArrayLike(obj) ? obj.length : _.keys(obj).length;
  };

  // Split a collection into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.
  _.partition = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var pass = [], fail = [];
    _.each(obj, function(value, key, obj) {
      (predicate(value, key, obj) ? pass : fail).push(value);
    });
    return [pass, fail];
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[0];
    return _.initial(array, array.length - n);
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[array.length - 1];
    return _.rest(array, Math.max(0, array.length - n));
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, strict, startIndex) {
    var output = [], idx = 0;
    for (var i = startIndex || 0, length = getLength(input); i < length; i++) {
      var value = input[i];
      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {
        //flatten current level of array or arguments object
        if (!shallow) value = flatten(value, shallow, strict);
        var j = 0, len = value.length;
        output.length += len;
        while (j < len) {
          output[idx++] = value[j++];
        }
      } else if (!strict) {
        output[idx++] = value;
      }
    }
    return output;
  };

  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, false);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
    if (!_.isBoolean(isSorted)) {
      context = iteratee;
      iteratee = isSorted;
      isSorted = false;
    }
    if (iteratee != null) iteratee = cb(iteratee, context);
    var result = [];
    var seen = [];
    for (var i = 0, length = getLength(array); i < length; i++) {
      var value = array[i],
          computed = iteratee ? iteratee(value, i, array) : value;
      if (isSorted) {
        if (!i || seen !== computed) result.push(value);
        seen = computed;
      } else if (iteratee) {
        if (!_.contains(seen, computed)) {
          seen.push(computed);
          result.push(value);
        }
      } else if (!_.contains(result, value)) {
        result.push(value);
      }
    }
    return result;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(flatten(arguments, true, true));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    var result = [];
    var argsLength = arguments.length;
    for (var i = 0, length = getLength(array); i < length; i++) {
      var item = array[i];
      if (_.contains(result, item)) continue;
      for (var j = 1; j < argsLength; j++) {
        if (!_.contains(arguments[j], item)) break;
      }
      if (j === argsLength) result.push(item);
    }
    return result;
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = flatten(arguments, true, true, 1);
    return _.filter(array, function(value){
      return !_.contains(rest, value);
    });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function() {
    return _.unzip(arguments);
  };

  // Complement of _.zip. Unzip accepts an array of arrays and groups
  // each array's elements on shared indices
  _.unzip = function(array) {
    var length = array && _.max(array, getLength).length || 0;
    var result = Array(length);

    for (var index = 0; index < length; index++) {
      result[index] = _.pluck(array, index);
    }
    return result;
  };

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    var result = {};
    for (var i = 0, length = getLength(list); i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // Generator function to create the findIndex and findLastIndex functions
  function createPredicateIndexFinder(dir) {
    return function(array, predicate, context) {
      predicate = cb(predicate, context);
      var length = getLength(array);
      var index = dir > 0 ? 0 : length - 1;
      for (; index >= 0 && index < length; index += dir) {
        if (predicate(array[index], index, array)) return index;
      }
      return -1;
    };
  }

  // Returns the first index on an array-like that passes a predicate test
  _.findIndex = createPredicateIndexFinder(1);
  _.findLastIndex = createPredicateIndexFinder(-1);

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iteratee, context) {
    iteratee = cb(iteratee, context, 1);
    var value = iteratee(obj);
    var low = 0, high = getLength(array);
    while (low < high) {
      var mid = Math.floor((low + high) / 2);
      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
    }
    return low;
  };

  // Generator function to create the indexOf and lastIndexOf functions
  function createIndexFinder(dir, predicateFind, sortedIndex) {
    return function(array, item, idx) {
      var i = 0, length = getLength(array);
      if (typeof idx == 'number') {
        if (dir > 0) {
            i = idx >= 0 ? idx : Math.max(idx + length, i);
        } else {
            length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;
        }
      } else if (sortedIndex && idx && length) {
        idx = sortedIndex(array, item);
        return array[idx] === item ? idx : -1;
      }
      if (item !== item) {
        idx = predicateFind(slice.call(array, i, length), _.isNaN);
        return idx >= 0 ? idx + i : -1;
      }
      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {
        if (array[idx] === item) return idx;
      }
      return -1;
    };
  }

  // Return the position of the first occurrence of an item in an array,
  // or -1 if the item is not included in the array.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);
  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex);

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (stop == null) {
      stop = start || 0;
      start = 0;
    }
    step = step || 1;

    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var range = Array(length);

    for (var idx = 0; idx < length; idx++, start += step) {
      range[idx] = start;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Determines whether to execute a function as a constructor
  // or a normal function with the provided arguments
  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
    var self = baseCreate(sourceFunc.prototype);
    var result = sourceFunc.apply(self, args);
    if (_.isObject(result)) return result;
    return self;
  };

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function(func, context) {
    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');
    var args = slice.call(arguments, 2);
    var bound = function() {
      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
    };
    return bound;
  };

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder, allowing any combination of arguments to be pre-filled.
  _.partial = function(func) {
    var boundArgs = slice.call(arguments, 1);
    var bound = function() {
      var position = 0, length = boundArgs.length;
      var args = Array(length);
      for (var i = 0; i < length; i++) {
        args[i] = boundArgs[i] === _ ? arguments[position++] : boundArgs[i];
      }
      while (position < arguments.length) args.push(arguments[position++]);
      return executeBound(func, bound, this, this, args);
    };
    return bound;
  };

  // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.
  _.bindAll = function(obj) {
    var i, length = arguments.length, key;
    if (length <= 1) throw new Error('bindAll must be passed function names');
    for (i = 1; i < length; i++) {
      key = arguments[i];
      obj[key] = _.bind(obj[key], obj);
    }
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memoize = function(key) {
      var cache = memoize.cache;
      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
      return cache[address];
    };
    memoize.cache = {};
    return memoize;
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){
      return func.apply(null, args);
    }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = _.partial(_.delay, _, 1);

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function(func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    if (!options) options = {};
    var later = function() {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    };
    return function() {
      var now = _.now();
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0 || remaining > wait) {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }
        previous = now;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, args, context, timestamp, result;

    var later = function() {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    };

    return function() {
      context = this;
      args = arguments;
      timestamp = _.now();
      var callNow = immediate && !timeout;
      if (!timeout) timeout = setTimeout(later, wait);
      if (callNow) {
        result = func.apply(context, args);
        context = args = null;
      }

      return result;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return _.partial(wrapper, func);
  };

  // Returns a negated version of the passed-in predicate.
  _.negate = function(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var args = arguments;
    var start = args.length - 1;
    return function() {
      var i = start;
      var result = args[start].apply(this, arguments);
      while (i--) result = args[i].call(this, result);
      return result;
    };
  };

  // Returns a function that will only be executed on and after the Nth call.
  _.after = function(times, func) {
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Returns a function that will only be executed up to (but not including) the Nth call.
  _.before = function(times, func) {
    var memo;
    return function() {
      if (--times > 0) {
        memo = func.apply(this, arguments);
      }
      if (times <= 1) func = null;
      return memo;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = _.partial(_.before, 2);

  // Object Functions
  // ----------------

  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
  var hasEnumBug = !{toString: null}.propertyIsEnumerable('toString');
  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString',
                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  function collectNonEnumProps(obj, keys) {
    var nonEnumIdx = nonEnumerableProps.length;
    var constructor = obj.constructor;
    var proto = (_.isFunction(constructor) && constructor.prototype) || ObjProto;

    // Constructor is a special case.
    var prop = 'constructor';
    if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);

    while (nonEnumIdx--) {
      prop = nonEnumerableProps[nonEnumIdx];
      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {
        keys.push(prop);
      }
    }
  }

  // Retrieve the names of an object's own properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = function(obj) {
    if (!_.isObject(obj)) return [];
    if (nativeKeys) return nativeKeys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve all the property names of an object.
  _.allKeys = function(obj) {
    if (!_.isObject(obj)) return [];
    var keys = [];
    for (var key in obj) keys.push(key);
    // Ahem, IE < 9.
    if (hasEnumBug) collectNonEnumProps(obj, keys);
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };

  // Returns the results of applying the iteratee to each element of the object
  // In contrast to _.map it returns an object
  _.mapObject = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    var keys =  _.keys(obj),
          length = keys.length,
          results = {},
          currentKey;
      for (var index = 0; index < length; index++) {
        currentKey = keys[index];
        results[currentKey] = iteratee(obj[currentKey], currentKey, obj);
      }
      return results;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = createAssigner(_.allKeys);

  // Assigns a given object with all the own properties in the passed-in object(s)
  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)
  _.extendOwn = _.assign = createAssigner(_.keys);

  // Returns the first key on an object that passes a predicate test
  _.findKey = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = _.keys(obj), key;
    for (var i = 0, length = keys.length; i < length; i++) {
      key = keys[i];
      if (predicate(obj[key], key, obj)) return key;
    }
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(object, oiteratee, context) {
    var result = {}, obj = object, iteratee, keys;
    if (obj == null) return result;
    if (_.isFunction(oiteratee)) {
      keys = _.allKeys(obj);
      iteratee = optimizeCb(oiteratee, context);
    } else {
      keys = flatten(arguments, false, false, 1);
      iteratee = function(value, key, obj) { return key in obj; };
      obj = Object(obj);
    }
    for (var i = 0, length = keys.length; i < length; i++) {
      var key = keys[i];
      var value = obj[key];
      if (iteratee(value, key, obj)) result[key] = value;
    }
    return result;
  };

   // Return a copy of the object without the blacklisted properties.
  _.omit = function(obj, iteratee, context) {
    if (_.isFunction(iteratee)) {
      iteratee = _.negate(iteratee);
    } else {
      var keys = _.map(flatten(arguments, false, false, 1), String);
      iteratee = function(value, key) {
        return !_.contains(keys, key);
      };
    }
    return _.pick(obj, iteratee, context);
  };

  // Fill in a given object with default properties.
  _.defaults = createAssigner(_.allKeys, true);

  // Creates an object that inherits from the given prototype object.
  // If additional properties are provided then they will be added to the
  // created object.
  _.create = function(prototype, props) {
    var result = baseCreate(prototype);
    if (props) _.extendOwn(result, props);
    return result;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Returns whether an object has a given set of `key:value` pairs.
  _.isMatch = function(object, attrs) {
    var keys = _.keys(attrs), length = keys.length;
    if (object == null) return !length;
    var obj = Object(object);
    for (var i = 0; i < length; i++) {
      var key = keys[i];
      if (attrs[key] !== obj[key] || !(key in obj)) return false;
    }
    return true;
  };


  // Internal recursive comparison function for `isEqual`.
  var eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a === 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className !== toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
      case '[object RegExp]':
      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return '' + a === '' + b;
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive.
        // Object(NaN) is equivalent to NaN
        if (+a !== +a) return +b !== +b;
        // An `egal` comparison is performed for other numeric values.
        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a === +b;
    }

    var areArrays = className === '[object Array]';
    if (!areArrays) {
      if (typeof a != 'object' || typeof b != 'object') return false;

      // Objects with different constructors are not equivalent, but `Object`s or `Array`s
      // from different frames are.
      var aCtor = a.constructor, bCtor = b.constructor;
      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
                               _.isFunction(bCtor) && bCtor instanceof bCtor)
                          && ('constructor' in a && 'constructor' in b)) {
        return false;
      }
    }
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.

    // Initializing stack of traversed objects.
    // It's done here since we only need them for objects and arrays comparison.
    aStack = aStack || [];
    bStack = bStack || [];
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] === a) return bStack[length] === b;
    }

    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);

    // Recursively compare objects and arrays.
    if (areArrays) {
      // Compare array lengths to determine if a deep comparison is necessary.
      length = a.length;
      if (length !== b.length) return false;
      // Deep compare the contents, ignoring non-numeric properties.
      while (length--) {
        if (!eq(a[length], b[length], aStack, bStack)) return false;
      }
    } else {
      // Deep compare objects.
      var keys = _.keys(a), key;
      length = keys.length;
      // Ensure that both objects contain the same number of properties before comparing deep equality.
      if (_.keys(b).length !== length) return false;
      while (length--) {
        // Deep compare each member
        key = keys[length];
        if (!(_.has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return true;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;
    return _.keys(obj).length === 0;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) === '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) === '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE < 9), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return _.has(obj, 'callee');
    };
  }

  // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,
  // IE 11 (#1621), and in Safari 8 (#1929).
  if (typeof /./ != 'function' && typeof Int8Array != 'object') {
    _.isFunction = function(obj) {
      return typeof obj == 'function' || false;
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function(obj) {
    return _.isNumber(obj) && obj !== +obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return obj != null && hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iteratees.
  _.identity = function(value) {
    return value;
  };

  // Predicate-generating functions. Often useful outside of Underscore.
  _.constant = function(value) {
    return function() {
      return value;
    };
  };

  _.noop = function(){};

  _.property = property;

  // Generates a function for a given object that returns a given property.
  _.propertyOf = function(obj) {
    return obj == null ? function(){} : function(key) {
      return obj[key];
    };
  };

  // Returns a predicate for checking whether an object has a given set of
  // `key:value` pairs.
  _.matcher = _.matches = function(attrs) {
    attrs = _.extendOwn({}, attrs);
    return function(obj) {
      return _.isMatch(obj, attrs);
    };
  };

  // Run a function **n** times.
  _.times = function(n, iteratee, context) {
    var accum = Array(Math.max(0, n));
    iteratee = optimizeCb(iteratee, context, 1);
    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // A (possibly faster) way to get the current timestamp as an integer.
  _.now = Date.now || function() {
    return new Date().getTime();
  };

   // List of HTML entities for escaping.
  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '`': '&#x60;'
  };
  var unescapeMap = _.invert(escapeMap);

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  var createEscaper = function(map) {
    var escaper = function(match) {
      return map[match];
    };
    // Regexes for identifying a key that needs to be escaped
    var source = '(?:' + _.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function(string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };
  _.escape = createEscaper(escapeMap);
  _.unescape = createEscaper(unescapeMap);

  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function(object, property, fallback) {
    var value = object == null ? void 0 : object[property];
    if (value === void 0) {
      value = fallback;
    }
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'":      "'",
    '\\':     '\\',
    '\r':     'r',
    '\n':     'n',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

  var escapeChar = function(match) {
    return '\\' + escapes[match];
  };

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  // NB: `oldSettings` only exists for backwards compatibility.
  _.template = function(text, settings, oldSettings) {
    if (!settings && oldSettings) settings = oldSettings;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escaper, escapeChar);
      index = offset + match.length;

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      } else if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      } else if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }

      // Adobe VMs need the match returned to produce the correct offest.
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + 'return __p;\n';

    try {
      var render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled source as a convenience for precompilation.
    var argument = settings.variable || 'obj';
    template.source = 'function(' + argument + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function. Start chaining a wrapped Underscore object.
  _.chain = function(obj) {
    var instance = _(obj);
    instance._chain = true;
    return instance;
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var result = function(instance, obj) {
    return instance._chain ? _(obj).chain() : obj;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    _.each(_.functions(obj), function(name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result(this, func.apply(_, args));
      };
    });
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
      return result(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  _.each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return result(this, method.apply(this._wrapped, arguments));
    };
  });

  // Extracts the result from a wrapped and chained object.
  _.prototype.value = function() {
    return this._wrapped;
  };

  // Provide unwrapping proxy for some methods used in engine operations
  // such as arithmetic and JSON stringification.
  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;

  _.prototype.toString = function() {
    return '' + this._wrapped;
  };

  // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.
  if (typeof define === 'function' && define.amd) {
    define('underscore', [], function() {
      return _;
    });
  }
}.call(this));

},{}]},{},[27])(27)
});